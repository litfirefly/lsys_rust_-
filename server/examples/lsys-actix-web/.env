#监听ip
APP_HOST=0.0.0.0 
#监听端口
APP_PORT=8080 
#启用https 备注:路径相对于工作目录
#APP_SSL_PORT=443 
#APP_SSL_CERT=./config/cert.pem  
#APP_SSL_KEY=./config/key.pem
#日志等级跟过滤,格式:crate-name=level,多个逗号分割,使用到crate参见源码.
LOG_LEVEL=sqlx_core=info,lsys_app_sender=debug,axtix_web=debug,actix=info,mio=error,lsys_user=trace,lsys_web=trace,lsys_core=trace,lsys_user=trace,lsys_rbac=trace,lsys_docs=trace,lsys_actix_web=trace,sqlx=trace,redis=debug
#日志输出目录,配置 LOG_NAME="std::out" 时无效
LOG_DIR="logs"
#日志输出文件,为空不记录日志，当为 std::out 或 std::err 控制台输出日志.其他值将日志输出文件到 LOG_DIR 文件中
LOG_NAME="std::out"
#jwt密钥,自定义修改,但每次修改会让已登陆用户退出登录
APP_JWT_KEY = "bbb" 
#数据库配置
DATABASE_URL="mysql://root:000@127.0.0.1:3306/test2"
#公共表前缀,跟tables.sql的表前缀保持一致.默认不修改即可
DATABASE_TABLE_PREFIX="yaf_"
#redis 配置,格式:redis://user:passwrod@host:port/
REDIS_URL="redis://127.0.0.1/"
#唯一ID生成使用MACHINE,部署多节点时建议指定
#SNOWFLAKE_MACHINE_ID=1 #可选值:1-31
#唯一ID生成使用NODE,部署多节点时建议指定
#SNOWFLAKE_NODE_ID=1 #可选值:1-31

#sqlx离线模式,仅在开发阶段使用. 编译后版本可建议删除此配置.
SQLX_OFFLINE=false # sqlx 需要启用 "offline"